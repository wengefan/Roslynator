<?xml version="1.0" encoding="utf-8"?>
<Roslynator>
  <Settings>
    <General>
      <PrefixFieldIdentifierWithUnderscore IsEnabled="true" />
    </General>
    <Refactorings>
      <Refactoring Id="RR0002" IsEnabled="true" /> <!-- AddBraces -->
      <Refactoring Id="RR0003" IsEnabled="true" /> <!-- AddBracesToIfElse -->
      <Refactoring Id="RR0004" IsEnabled="true" /> <!-- AddBracesToSwitchSection -->
      <Refactoring Id="RR0005" IsEnabled="true" /> <!-- AddBracesToSwitchSections -->
      <Refactoring Id="RR0006" IsEnabled="true" /> <!-- AddCastExpression -->
      <Refactoring Id="RR0007" IsEnabled="true" /> <!-- AddDefaultValueToParameter -->
      <Refactoring Id="RR0008" IsEnabled="true" /> <!-- AddDefaultValueToReturnStatement -->
      <Refactoring Id="RR0009" IsEnabled="true" /> <!-- AddExceptionToDocumentationComment -->
      <Refactoring Id="RR0010" IsEnabled="true" /> <!-- AddIdentifierToVariableDeclaration -->
      <Refactoring Id="RR0011" IsEnabled="true" /> <!-- AddParameterNameToArgument -->
      <Refactoring Id="RR0012" IsEnabled="true" /> <!-- AddParameterNameToParameter -->
      <Refactoring Id="RR0013" IsEnabled="true" /> <!-- AddUsingDirective -->
      <Refactoring Id="RR0014" IsEnabled="true" /> <!-- AddUsingStaticDirective -->
      <Refactoring Id="RR0015" IsEnabled="true" /> <!-- CallConfigureAwait -->
      <Refactoring Id="RR0016" IsEnabled="true" /> <!-- CallExtensionMethodAsInstanceMethod -->
      <Refactoring Id="RR0017" IsEnabled="true" /> <!-- CallToMethod -->
      <Refactoring Id="RR0018" IsEnabled="true" /> <!-- ChangeExplicitTypeToVar -->
      <Refactoring Id="RR0019" IsEnabled="true" /> <!-- ChangeMemberTypeAccordingToReturnExpression -->
      <Refactoring Id="RR0020" IsEnabled="true" /> <!-- ChangeMemberTypeAccordingToYieldReturnExpression -->
      <Refactoring Id="RR0021" IsEnabled="true" /> <!-- ChangeMethodReturnTypeToVoid -->
      <Refactoring Id="RR0022" IsEnabled="true" /> <!-- ChangeTypeAccordingToExpression -->
      <Refactoring Id="RR0023" IsEnabled="true" /> <!-- ChangeVarToExplicitType -->
      <Refactoring Id="RR0024" IsEnabled="true" /> <!-- CheckExpressionForNull -->
      <Refactoring Id="RR0025" IsEnabled="true" /> <!-- CheckParameterForNull -->
      <Refactoring Id="RR0026" IsEnabled="true" /> <!-- CollapseToInitializer -->
      <Refactoring Id="RR0027" IsEnabled="true" /> <!-- CommentOutMember -->
      <Refactoring Id="RR0028" IsEnabled="true" /> <!-- CommentOutStatement -->
      <Refactoring Id="RR0029" IsEnabled="true" /> <!-- CopyDocumentationCommentFromBaseMember -->
      <Refactoring Id="RR0030" IsEnabled="true" /> <!-- DuplicateArgument -->
      <Refactoring Id="RR0031" IsEnabled="true" /> <!-- DuplicateMember -->
      <Refactoring Id="RR0032" IsEnabled="true" /> <!-- DuplicateParameter -->
      <Refactoring Id="RR0033" IsEnabled="true" /> <!-- DuplicateStatement -->
      <Refactoring Id="RR0034" IsEnabled="true" /> <!-- ExpandAssignmentExpression -->
      <Refactoring Id="RR0035" IsEnabled="true" /> <!-- ExpandCoalesceExpression -->
      <Refactoring Id="RR0036" IsEnabled="true" /> <!-- ExpandEvent -->
      <Refactoring Id="RR0037" IsEnabled="true" /> <!-- ExpandExpressionBody -->
      <Refactoring Id="RR0038" IsEnabled="true" /> <!-- ExpandInitializer -->
      <Refactoring Id="RR0039" IsEnabled="true" /> <!-- ExpandLambdaExpressionBody -->
      <Refactoring Id="RR0040" IsEnabled="true" /> <!-- ExpandProperty -->
      <Refactoring Id="RR0041" IsEnabled="true" /> <!-- ExpandPropertyAndAddBackingField -->
      <Refactoring Id="RR0043" IsEnabled="true" /> <!-- ExtractExpressionFromCondition -->
      <Refactoring Id="RR0044" IsEnabled="true" /> <!-- ExtractGenericType -->
      <Refactoring Id="RR0045" IsEnabled="true" /> <!-- ExtractStatement -->
      <Refactoring Id="RR0046" IsEnabled="true" /> <!-- ExtractTypeDeclarationToNewFile -->
      <Refactoring Id="RR0047" IsEnabled="true" /> <!-- FormatAccessorBraces -->
      <Refactoring Id="RR0048" IsEnabled="true" /> <!-- FormatArgumentList -->
      <Refactoring Id="RR0049" IsEnabled="true" /> <!-- FormatBinaryExpression -->
      <Refactoring Id="RR0050" IsEnabled="true" /> <!-- FormatConditionalExpression -->
      <Refactoring Id="RR0051" IsEnabled="true" /> <!-- FormatExpressionChain -->
      <Refactoring Id="RR0052" IsEnabled="true" /> <!-- FormatInitializer -->
      <Refactoring Id="RR0053" IsEnabled="true" /> <!-- FormatParameterList -->
      <Refactoring Id="RR0054" IsEnabled="true" /> <!-- GenerateBaseConstructors -->
      <Refactoring Id="RR0055" IsEnabled="true" /> <!-- GenerateCombinedEnumMember -->
      <Refactoring Id="RR0056" IsEnabled="true" /> <!-- GenerateEnumMember -->
      <Refactoring Id="RR0057" IsEnabled="true" /> <!-- GenerateEnumValues -->
      <Refactoring Id="RR0058" IsEnabled="true" /> <!-- GenerateEventInvokingMethod -->
      <Refactoring Id="RR0059" IsEnabled="true" /> <!-- GenerateSwitchSections -->
      <Refactoring Id="RR0060" IsEnabled="true" /> <!-- InitializeLocalWithDefaultValue -->
      <Refactoring Id="RR0061" IsEnabled="true" /> <!-- InlineAliasExpression -->
      <Refactoring Id="RR0062" IsEnabled="true" /> <!-- InlineMethod -->
      <Refactoring Id="RR0063" IsEnabled="true" /> <!-- InsertStringInterpolation -->
      <Refactoring Id="RR0064" IsEnabled="true" /> <!-- IntroduceAndInitializeField -->
      <Refactoring Id="RR0065" IsEnabled="true" /> <!-- IntroduceAndInitializeProperty -->
      <Refactoring Id="RR0066" IsEnabled="false" /> <!-- IntroduceConstructor -->
      <Refactoring Id="RR0067" IsEnabled="true" /> <!-- IntroduceFieldToLockOn -->
      <Refactoring Id="RR0068" IsEnabled="true" /> <!-- IntroduceLocalVariable -->
      <Refactoring Id="RR0069" IsEnabled="true" /> <!-- MakeMemberAbstract -->
      <Refactoring Id="RR0070" IsEnabled="true" /> <!-- MakeMemberVirtual -->
      <Refactoring Id="RR0073" IsEnabled="true" /> <!-- MergeAssignmentExpressionWithReturnStatement -->
      <Refactoring Id="RR0074" IsEnabled="true" /> <!-- MergeAttributes -->
      <Refactoring Id="RR0075" IsEnabled="true" /> <!-- MergeIfStatements -->
      <Refactoring Id="RR0076" IsEnabled="true" /> <!-- MergeInterpolationIntoInterpolatedString -->
      <Refactoring Id="RR0077" IsEnabled="true" /> <!-- MergeLocalDeclarations -->
      <Refactoring Id="RR0078" IsEnabled="true" /> <!-- JoinStringExpressions -->
      <Refactoring Id="RR0079" IsEnabled="true" /> <!-- NegateBinaryExpression -->
      <Refactoring Id="RR0080" IsEnabled="true" /> <!-- NegateBooleanLiteral -->
      <Refactoring Id="RR0081" IsEnabled="true" /> <!-- NegateIsExpression -->
      <Refactoring Id="RR0082" IsEnabled="true" /> <!-- NegateOperator -->
      <Refactoring Id="RR0083" IsEnabled="true" /> <!-- NotifyPropertyChanged -->
      <Refactoring Id="RR0084" IsEnabled="true" /> <!-- ParenthesizeExpression -->
      <Refactoring Id="RR0085" IsEnabled="true" /> <!-- PromoteLocalToParameter -->
      <Refactoring Id="RR0086" IsEnabled="true" /> <!-- RemoveAllComments -->
      <Refactoring Id="RR0087" IsEnabled="true" /> <!-- RemoveAllCommentsExceptDocumentationComments -->
      <Refactoring Id="RR0088" IsEnabled="false" /> <!-- RemoveAllDocumentationComments -->
      <Refactoring Id="RR0089" IsEnabled="true" /> <!-- RemoveAllMemberDeclarations -->
      <Refactoring Id="RR0090" IsEnabled="true" /> <!-- RemoveAllPreprocessorDirectives -->
      <Refactoring Id="RR0091" IsEnabled="true" /> <!-- RemoveAllRegionDirectives -->
      <Refactoring Id="RR0092" IsEnabled="true" /> <!-- RemoveAllStatements -->
      <Refactoring Id="RR0093" IsEnabled="true" /> <!-- RemoveAllSwitchSections -->
      <Refactoring Id="RR0094" IsEnabled="true" /> <!-- RemoveBraces -->
      <Refactoring Id="RR0095" IsEnabled="true" /> <!-- RemoveBracesFromIfElse -->
      <Refactoring Id="RR0096" IsEnabled="true" /> <!-- RemoveBracesFromSwitchSection -->
      <Refactoring Id="RR0097" IsEnabled="true" /> <!-- RemoveBracesFromSwitchSections -->
      <Refactoring Id="RR0098" IsEnabled="true" /> <!-- RemoveComment -->
      <Refactoring Id="RR0099" IsEnabled="true" /> <!-- RemoveConditionFromLastElse -->
      <Refactoring Id="RR0100" IsEnabled="true" /> <!-- RemoveDirectiveAndRelatedDirectives -->
      <Refactoring Id="RR0101" IsEnabled="true" /> <!-- RemoveEmptyLines -->
      <Refactoring Id="RR0102" IsEnabled="true" /> <!-- RemoveInterpolation -->
      <Refactoring Id="RR0103" IsEnabled="true" /> <!-- RemoveMember -->
      <Refactoring Id="RR0104" IsEnabled="true" /> <!-- RemoveMemberDeclarations -->
      <Refactoring Id="RR0105" IsEnabled="true" /> <!-- RemoveParameterNameFromArgument -->
      <Refactoring Id="RR0106" IsEnabled="true" /> <!-- RemoveParentheses -->
      <Refactoring Id="RR0107" IsEnabled="true" /> <!-- RemovePropertyInitializer -->
      <Refactoring Id="RR0108" IsEnabled="true" /> <!-- RemoveRegion -->
      <Refactoring Id="RR0109" IsEnabled="true" /> <!-- RemoveStatement -->
      <Refactoring Id="RR0110" IsEnabled="true" /> <!-- RemoveStatementsFromSwitchSections -->
      <Refactoring Id="RR0111" IsEnabled="true" /> <!-- RenameBackingFieldAccordingToPropertyName -->
      <Refactoring Id="RR0112" IsEnabled="true" /> <!-- RenameIdentifierAccordingToTypeName -->
      <Refactoring Id="RR0113" IsEnabled="true" /> <!-- RenameMethodAccordingToTypeName -->
      <Refactoring Id="RR0114" IsEnabled="true" /> <!-- RenameParameterAccordingToTypeName -->
      <Refactoring Id="RR0115" IsEnabled="true" /> <!-- RenamePropertyAccordingToTypeName -->
      <Refactoring Id="RR0116" IsEnabled="true" /> <!-- ReplaceAnyWithAllOrAllWithAny -->
      <Refactoring Id="RR0117" IsEnabled="true" /> <!-- ReplaceAsWithCast -->
      <Refactoring Id="RR0118" IsEnabled="true" /> <!-- ReplaceCastWithAs -->
      <Refactoring Id="RR0119" IsEnabled="true" /> <!-- ReplaceConditionalExpressionWithExpression -->
      <Refactoring Id="RR0120" IsEnabled="true" /> <!-- UseIfElseInsteadOfConditionalExpression -->
      <Refactoring Id="RR0121" IsEnabled="true" /> <!-- ReplaceConstantWithField -->
      <Refactoring Id="RR0123" IsEnabled="true" /> <!-- ReplaceDoWithWhile -->
      <Refactoring Id="RR0124" IsEnabled="true" /> <!-- ReplaceEqualsExpressionWithStringEquals -->
      <Refactoring Id="RR0125" IsEnabled="true" /> <!-- ReplaceEqualsExpressionWithStringIsNullOrEmpty -->
      <Refactoring Id="RR0126" IsEnabled="true" /> <!-- ReplaceEqualsExpressionWithStringIsNullOrWhiteSpace -->
      <Refactoring Id="RR0127" IsEnabled="true" /> <!-- ReplaceExpressionWithConstantValue -->
      <Refactoring Id="RR0128" IsEnabled="true" /> <!-- UseConstantInsteadOfField -->
      <Refactoring Id="RR0129" IsEnabled="true" /> <!-- ReplaceForEachWithFor -->
      <Refactoring Id="RR0130" IsEnabled="true" /> <!-- ReplaceForWithForEach -->
      <Refactoring Id="RR0131" IsEnabled="true" /> <!-- ReplaceForWithWhile -->
      <Refactoring Id="RR0132" IsEnabled="true" /> <!-- ReplaceHexadecimalLiteralWithDecimalLiteral -->
      <Refactoring Id="RR0133" IsEnabled="true" /> <!-- ReplaceIfWithSwitch -->
      <Refactoring Id="RR0134" IsEnabled="true" /> <!-- ReplaceIncrementOperatorWithDecrementOperator -->
      <Refactoring Id="RR0135" IsEnabled="true" /> <!-- ReplaceInterpolatedStringWithInterpolationExpression -->
      <Refactoring Id="RR0136" IsEnabled="true" /> <!-- ReplaceInterpolatedStringWithStringLiteral -->
      <Refactoring Id="RR0137" IsEnabled="true" /> <!-- ReplaceMethodGroupWithLambda -->
      <Refactoring Id="RR0138" IsEnabled="false" /> <!-- ReplaceMethodWithProperty -->
      <Refactoring Id="RR0139" IsEnabled="true" /> <!-- ReplaceNullLiteralExpressionWithDefaultExpression -->
      <Refactoring Id="RR0140" IsEnabled="true" /> <!-- ReplacePrefixOperatorWithPostfixOperator -->
      <Refactoring Id="RR0141" IsEnabled="true" /> <!-- ReplacePropertyWithMethod -->
      <Refactoring Id="RR0142" IsEnabled="true" /> <!-- ReplaceRegularStringLiteralWithVerbatimStringLiteral -->
      <Refactoring Id="RR0143" IsEnabled="true" /> <!-- ReplaceStatementWithIfElse -->
      <Refactoring Id="RR0144" IsEnabled="true" /> <!-- ReplaceStringContainsWithStringIndexOf -->
      <Refactoring Id="RR0145" IsEnabled="true" /> <!-- ReplaceStringFormatWithInterpolatedString -->
      <Refactoring Id="RR0147" IsEnabled="true" /> <!-- ReplaceSwitchWithIfElse -->
      <Refactoring Id="RR0148" IsEnabled="true" /> <!-- ReplaceVerbatimStringLiteralWithRegularStringLiteral -->
      <Refactoring Id="RR0149" IsEnabled="true" /> <!-- ReplaceVerbatimStringLiteralWithRegularStringLiterals -->
      <Refactoring Id="RR0150" IsEnabled="true" /> <!-- ReplaceWhileWithDo -->
      <Refactoring Id="RR0151" IsEnabled="true" /> <!-- ReplaceWhileWithFor -->
      <Refactoring Id="RR0152" IsEnabled="true" /> <!-- ReverseForLoop -->
      <Refactoring Id="RR0153" IsEnabled="true" /> <!-- SimplifyIf -->
      <Refactoring Id="RR0154" IsEnabled="true" /> <!-- SimplifyLambdaExpression -->
      <Refactoring Id="RR0155" IsEnabled="true" /> <!-- SortMemberDeclarations -->
      <Refactoring Id="RR0156" IsEnabled="true" /> <!-- SplitAttributes -->
      <Refactoring Id="RR0157" IsEnabled="true" /> <!-- SplitSwitchLabels -->
      <Refactoring Id="RR0158" IsEnabled="true" /> <!-- SplitVariableDeclaration -->
      <Refactoring Id="RR0159" IsEnabled="true" /> <!-- SwapExpressionsInBinaryExpression -->
      <Refactoring Id="RR0160" IsEnabled="true" /> <!-- SwapExpressionsInConditionalExpression -->
      <Refactoring Id="RR0161" IsEnabled="true" /> <!-- SwapMemberDeclarations -->
      <Refactoring Id="RR0162" IsEnabled="true" /> <!-- SwapStatementsInIfElse -->
      <Refactoring Id="RR0163" IsEnabled="true" /> <!-- Uncomment -->
      <Refactoring Id="RR0164" IsEnabled="true" /> <!-- UseBitwiseOperationInsteadOfCallingHasFlag -->
      <Refactoring Id="RR0165" IsEnabled="true" /> <!-- UseCoalesceExpressionInsteadOfIf -->
      <Refactoring Id="RR0166" IsEnabled="true" /> <!-- UseConditionalExpressionInsteadOfIf -->
      <Refactoring Id="RR0167" IsEnabled="true" /> <!-- UseElementAccessInsteadOfEnumerableMethod -->
      <Refactoring Id="RR0168" IsEnabled="true" /> <!-- UseEmptyStringLiteralInsteadOfStringEmpty -->
      <Refactoring Id="RR0169" IsEnabled="true" /> <!-- UseExpressionBodiedMember -->
      <Refactoring Id="RR0170" IsEnabled="true" /> <!-- UseLambdaExpressionInsteadOfAnonymousMethod -->
      <Refactoring Id="RR0171" IsEnabled="false" /> <!-- UseStringEmptyInsteadOfEmptyStringLiteral -->
      <Refactoring Id="RR0172" IsEnabled="true" /> <!-- WrapInCondition -->
      <Refactoring Id="RR0173" IsEnabled="true" /> <!-- WrapInElseClause -->
      <Refactoring Id="RR0174" IsEnabled="true" /> <!-- WrapInIfDirective -->
      <Refactoring Id="RR0175" IsEnabled="true" /> <!-- WrapInRegion -->
      <Refactoring Id="RR0176" IsEnabled="true" /> <!-- WrapInTryCatch -->
      <Refactoring Id="RR0177" IsEnabled="true" /> <!-- WrapInUsingStatement -->
      <Refactoring Id="RR0178" IsEnabled="true" /> <!-- AddTypeParameter -->
      <Refactoring Id="RR0179" IsEnabled="true" /> <!-- ImplementIEquatableOfT -->
      <Refactoring Id="RR0180" IsEnabled="true" /> <!-- InlineUsingStatic -->
      <Refactoring Id="RR0181" IsEnabled="true" /> <!-- InlineConstant -->
      <Refactoring Id="RR0182" IsEnabled="true" /> <!-- UseStringBuilderInsteadOfConcatenation -->
      <Refactoring Id="RR0183" IsEnabled="true" /> <!-- UseListInsteadOfYield -->
      <Refactoring Id="RR0184" IsEnabled="true" /> <!-- SplitIfStatement -->
      <Refactoring Id="RR0185" IsEnabled="true" /> <!-- ReplaceObjectCreationWithDefaultValue -->
      <Refactoring Id="RR0186" IsEnabled="true" /> <!-- ChangeAccessibility -->
      <Refactoring Id="RR0187" IsEnabled="true" /> <!-- FormatConstraintClauses -->
      <Refactoring Id="RR0188" IsEnabled="false" /> <!-- ReplaceForEachWithForAndReverseLoop -->
      <Refactoring Id="RR0189" IsEnabled="true" /> <!-- ReduceIfNesting -->
      <Refactoring Id="RR0190" IsEnabled="true" /> <!-- ReplaceIfElseWithIfReturn -->
      <Refactoring Id="RR0191" IsEnabled="true" /> <!-- UseCSharp6DictionaryInitializer -->
    </Refactorings>
    <CodeFixes>
      <CodeFix Id="RCF0001" IsEnabled="true" /> <!-- RemoveUnusedVariable (fixes CS0168, CS0219) -->
      <CodeFix Id="RCF0002" IsEnabled="true" /> <!-- AddBreakStatementToSwitchSection (fixes CS0163, CS8070) -->
      <CodeFix Id="RCF0003" IsEnabled="true" /> <!-- CreateSingletonArray (fixes CS0266) -->
      <CodeFix Id="RCF0004" IsEnabled="true" /> <!-- AddOutModifierToArgument (fixes CS1620) -->
      <CodeFix Id="RCF0005" IsEnabled="true" /> <!-- MoveBaseClassBeforeAnyInterface (fixes CS1722) -->
      <CodeFix Id="RCF0006" IsEnabled="true" /> <!-- AddOverrideModifier (fixes CS0114) -->
      <CodeFix Id="RCF0007" IsEnabled="true" /> <!-- AddNewModifier (fixes CS0114) -->
      <CodeFix Id="RCF0008" IsEnabled="true" /> <!-- ExtractDeclarationFromUsingStatement (fixes CS1674) -->
      <CodeFix Id="RCF0009" IsEnabled="true" /> <!-- AddBracesToDeclarationOrLabeledStatement (fixes CS1023) -->
      <CodeFix Id="RCF0010" IsEnabled="true" /> <!-- MarkOperatorAsPublicAndStatic (fixes CS0558) -->
      <CodeFix Id="RCF0011" IsEnabled="true" /> <!-- RemoveDuplicateModifier (fixes CS1004) -->
      <CodeFix Id="RCF0012" IsEnabled="true" /> <!-- RemoveDuplicateAttribute (fixes CS0579) -->
      <CodeFix Id="RCF0013" IsEnabled="true" /> <!-- RemoveNewModifier (fixes CS0109) -->
      <CodeFix Id="RCF0014" IsEnabled="true" /> <!-- RemoveUnusedLabel (fixes CS0164) -->
      <CodeFix Id="RCF0015" IsEnabled="true" /> <!-- OverridingMemberCannotChangeAccessModifiers (fixes CS0507) -->
      <CodeFix Id="RCF0016" IsEnabled="true" /> <!-- AddDocumentationComment (fixes CS1591) -->
      <CodeFix Id="RCF0017" IsEnabled="true" /> <!-- RemoveUnreachableCode (fixes CS0162) -->
      <CodeFix Id="RCF0018" IsEnabled="true" /> <!-- ChangeMethodReturnType (fixes CS0508, CS0766) -->
      <CodeFix Id="RCF0019" IsEnabled="true" /> <!-- MemberTypeMustMatchOverriddenMemberType (fixes CS1715) -->
      <CodeFix Id="RCF0020" IsEnabled="true" /> <!-- AddReturnStatementThatReturnsDefaultValue (fixes CS0161, CS1643) -->
      <CodeFix Id="RCF0021" IsEnabled="true" /> <!-- UseYieldReturnInsteadOfReturn (fixes CS0029, CS1622) -->
      <CodeFix Id="RCF0022" IsEnabled="true" /> <!-- ReplaceStringLiteralWithCharacterLiteral (fixes CS0029) -->
      <CodeFix Id="RCF0023" IsEnabled="true" /> <!-- AddComparisonWithBooleanLiteral (fixes CS0019, CS0266) -->
      <CodeFix Id="RCF0024" IsEnabled="true" /> <!-- RemovePropertyOrFieldInitializer (fixes CS0573) -->
      <CodeFix Id="RCF0025" IsEnabled="true" /> <!-- AddPartialModifier (fixes CS0101, CS0102, CS0260, CS0751) -->
      <CodeFix Id="RCF0026" IsEnabled="true" /> <!-- AddBody (fixes CS0501, CS0756) -->
      <CodeFix Id="RCF0027" IsEnabled="true" /> <!-- RemoveRefModifier (fixes CS1615, CS1988, CS1623) -->
      <CodeFix Id="RCF0028" IsEnabled="true" /> <!-- RemoveRedundantAssignment (fixes CS1717) -->
      <CodeFix Id="RCF0029" IsEnabled="true" /> <!-- ChangeAccessibility (fixes CS0261, CS0442, CS0628, CS1057, CS1527) -->
      <CodeFix Id="RCF0030" IsEnabled="true" /> <!-- ChangeTypeOfParamsParameter (fixes CS0225) -->
      <CodeFix Id="RCF0031" IsEnabled="true" /> <!-- UseUncheckedExpression (fixes CS0221) -->
      <CodeFix Id="RCF0032" IsEnabled="true" /> <!-- RemoveImplementationFromAbstractMember (fixes CS0069, CS0500, CS0531) -->
      <CodeFix Id="RCF0033" IsEnabled="true" /> <!-- AddStaticModifier (fixes CS0708, CS0710, CS1105, CS1106) -->
      <CodeFix Id="RCF0034" IsEnabled="true" /> <!-- MakeContainingClassAbstract (fixes CS0513) -->
      <CodeFix Id="RCF0036" IsEnabled="true" /> <!-- SynchronizeAccessibility (fixes CS0262) -->
      <CodeFix Id="RCF0037" IsEnabled="true" /> <!-- RemoveArgumentList (fixes CS1955) -->
      <CodeFix Id="RCF0038" IsEnabled="true" /> <!-- FixMemberAccessName (fixes CS1061) -->
      <CodeFix Id="RCF0039" IsEnabled="true" /> <!-- AddArgumentList (fixes CS0428, CS0023) -->
      <CodeFix Id="RCF0040" IsEnabled="true" /> <!-- InitializeLocalVariableWithDefaultValue (fixes CS0165) -->
      <CodeFix Id="RCF0041" IsEnabled="true" /> <!-- ChangeTypeOfLocalVariable (fixes CS0123, CS0407, CS0815) -->
      <CodeFix Id="RCF0042" IsEnabled="true" /> <!-- MakeMemberNonStatic (fixes CS0120) -->
      <CodeFix Id="RCF0043" IsEnabled="true" /> <!-- RemoveConstraintClauses (fixes CS0080) -->
      <CodeFix Id="RCF0044" IsEnabled="true" /> <!-- AddTypeArgument (fixes CS0305) -->
      <CodeFix Id="RCF0045" IsEnabled="true" /> <!-- RemoveConstModifier (fixes CS0133) -->
      <CodeFix Id="RCF0046" IsEnabled="true" /> <!-- RemoveEmptySwitchStatement (fixes CS1522) -->
      <CodeFix Id="RCF0047" IsEnabled="true" /> <!-- IntroduceLocalVariable (fixes CS0201) -->
      <CodeFix Id="RCF0048" IsEnabled="true" /> <!-- UseExplicitTypeInsteadOfVar (fixes CS0819, CS0822) -->
      <CodeFix Id="RCF0049" IsEnabled="true" /> <!-- RemoveAwaitKeyword (fixes CS1061) -->
      <CodeFix Id="RCF0050" IsEnabled="true" /> <!-- WrapInUnsafeStatement (fixes CS0214) -->
      <CodeFix Id="RCF0051" IsEnabled="true" /> <!-- AddUnsafeModifier (fixes CS0214) -->
      <CodeFix Id="RCF0052" IsEnabled="false" /> <!-- RemoveReturnKeyword (fixes CS0127, CS1997) -->
      <CodeFix Id="RCF0053" IsEnabled="true" /> <!-- RemoveParametersFromStaticConstructor (fixes CS0132) -->
      <CodeFix Id="RCF0054" IsEnabled="true" /> <!-- ReorderModifiers (fixes CS0267) -->
      <CodeFix Id="RCF0055" IsEnabled="true" /> <!-- RemoveInvalidModifier (fixes CS0107, CS0112, CS0115, CS0275, CS0441, CS0515, CS0678, CS0750, CS0753, CS0759, CS1609, CS1994) -->
      <CodeFix Id="RCF0056" IsEnabled="true" /> <!-- RemoveMemberDeclaration (fixes CS0114) -->
      <CodeFix Id="RCF0057" IsEnabled="false" /> <!-- RemoveReturnExpression (fixes CS0127, CS1997) -->
      <CodeFix Id="RCF0058" IsEnabled="true" /> <!-- ReplaceNullLiteralExpressionWithDefaultValue (fixes CS0037) -->
      <CodeFix Id="RCF0059" IsEnabled="true" /> <!-- ReplaceVariableDeclarationWithAssignment (fixes CS0128, CS0136) -->
      <CodeFix Id="RCF0060" IsEnabled="true" /> <!-- RemoveThisModifier (fixes CS1100, CS1105, CS1106) -->
      <CodeFix Id="RCF0061" IsEnabled="true" /> <!-- RemoveTypeParameter (fixes CS0693) -->
      <CodeFix Id="RCF0062" IsEnabled="true" /> <!-- MakeContainingClassNonStatic (fixes CS0708, CS0710) -->
      <CodeFix Id="RCF0063" IsEnabled="true" /> <!-- AddCastExpression (fixes CS0173) -->
      <CodeFix Id="RCF0064" IsEnabled="true" /> <!-- MoveConstraint (fixes CS0401, CS0449) -->
      <CodeFix Id="RCF0065" IsEnabled="true" /> <!-- RemoveConstraint (fixes CS0405, CS0450, CS0451) -->
      <CodeFix Id="RCF0066" IsEnabled="true" /> <!-- CombineConstraintClauses (fixes CS0409) -->
      <CodeFix Id="RCF0067" IsEnabled="true" /> <!-- AssignDefaultValueToOutParameter (fixes CS0177) -->
      <CodeFix Id="RCF0068" IsEnabled="true" /> <!-- MakeClassNonStatic (fixes CS0718) -->
      <CodeFix Id="RCF0069" IsEnabled="true" /> <!-- RemoveYieldKeyword (fixes CS1621) -->
      <CodeFix Id="RCF0070" IsEnabled="true" /> <!-- RemoveOutModifier (fixes CS1988, CS1623) -->
      <CodeFix Id="RCF0071" IsEnabled="true" /> <!-- RemoveAttribute (fixes CS0592, CS1689) -->
      <CodeFix Id="RCF0072" IsEnabled="true" /> <!-- RemoveJumpStatement (fixes CS0139) -->
      <CodeFix Id="RCF0073" IsEnabled="true" /> <!-- UseCoalesceExpression (fixes CS0266) -->
      <CodeFix Id="RCF0074" IsEnabled="true" /> <!-- ReplaceAsExpressionWithCastExpression (fixes CS0077) -->
      <CodeFix Id="RCF0075" IsEnabled="true" /> <!-- RemoveConditionThatIsAlwaysEqualToTrueOrFalse (fixes CS0472) -->
      <CodeFix Id="RCF0076" IsEnabled="true" /> <!-- IntroduceField (fixes CS0201) -->
      <CodeFix Id="RCF0077" IsEnabled="true" /> <!-- ReplaceElementAccessWithInvocation (fixes CS0021) -->
    </CodeFixes>
  </Settings>
</Roslynator>
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2F2B32B2-31D8-4D52-A05F-0D909BD07EBE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator.CSharp</RootNamespace>
    <AssemblyName>Roslynator.CSharp.Analyzers</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\global.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>
    </DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\global.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Roslynator.CSharp.Analyzers.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="CodeFixProviders\BaseArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BaseTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BlockCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddEmptyLineAfterClosingBraceCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddParenthesesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\CompositeEnumValueContainsUndefinedFlagCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EndRegionDirectiveTriviaCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EnumMemberDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\LambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ObjectCreationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ArgumentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ParameterCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ParameterNameDiffersFromBaseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantAsyncAwaitCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantCastCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReorderTypeParameterConstraintsCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\TypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\TypeParameterCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\DeclareEnumMemberWithZeroValueCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\DocumentationCommentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddExceptionToDocumentationCommentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseConditionalAccessCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AvoidNullReferenceExceptionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseRegexInstanceInsteadOfStaticMethodCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseRegularStringLiteralInsteadOfVerbatimStringLiteralCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseReturnInsteadOfAssignmentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseStringComparisonCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\VariableDeclaratorCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\AbstractTypeShouldNotHavePublicConstructorsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ReorderNamedArgumentsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddOrRemoveRegionNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AsExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ImplementExceptionConstructorsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidBoxingOfValueTypeDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FormatConditionalExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidSingleLineBlockDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ReduceIfNestingDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ReorderTypeParameterConstraintsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseMethodGroupInsteadOfAnonymousFunctionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SimplifyBooleanExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseAttributeUsageAttributeDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseConstantInsteadOfFieldDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\MarkFieldAsReadOnlyDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\JoinStringExpressionsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddEmptyLineAfterClosingBraceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddExceptionToDocumentationCommentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddParameterToDocumentationCommentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddSummaryToDocumentationCommentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AddTypeParameterToDocumentationCommentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidChainOfAssignmentsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidEmbeddedStatementInIfElseDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\LocalDeclarationStatementCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\AddParenthesesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CompositeEnumValueContainsUndefinedFlagDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EnumMemberShouldDeclareExplicitValueDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\OverridingMemberCannotChangeParamsModifierDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantAutoPropertyInitializationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\StaticMemberInGenericTypeShouldUseTypeParameterDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantAsyncAwaitDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ReplaceCommentWithDocumentationCommentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantBaseInterfaceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SimplifyLazilyInitializedPropertyDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SwitchStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UnusedParameterDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ParameterNameDiffersFromBaseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CallDebugFailInsteadOfDebugAssertDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseEventArgsEmptyDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseExclusiveOrOperatorDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseIsOperatorInsteadOfAsOperatorDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseCoalesceExpressionInsteadOfIfDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DeclareEnumValueAsCombinationOfNamesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UsePostfixUnaryOperatorInsteadOfAssignmentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseReadOnlyAutoPropertyDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseRegularStringLiteralInsteadOfVerbatimStringLiteralDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseVarInForEachDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseReturnInsteadOfAssignmentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseVarWhenTypeIsNotObviousDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ValueTypeObjectIsNeverEqualToNullDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UnconstrainedTypeParameterCheckedForNullDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticDescriptors.cs" />
    <Compile Include="DiagnosticDescriptors.Deprecated.Generated.cs" />
    <Compile Include="DiagnosticDescriptors.Generated.cs" />
    <Compile Include="DiagnosticIdentifiers.Deprecated.Generated.cs" />
    <Compile Include="DiagnosticIdentifiers.Generated.cs" />
    <Compile Include="Refactorings\AddOrRemoveRegionNameRefactoring.cs" />
    <Compile Include="Refactorings\CallThenByInsteadOfOrderByRefactoring.cs" />
    <Compile Include="Refactorings\OptimizeStringBuilderAppendCallRefactoring.cs" />
    <Compile Include="Refactorings\AvoidBoxingOfValueTypeRefactoring.cs" />
    <Compile Include="Refactorings\CombineEnumerableWhereAndAnyRefactoring.cs" />
    <Compile Include="Refactorings\ImplementExceptionConstructorsRefactoring.cs" />
    <Compile Include="Refactorings\FormatInitializerWithSingleExpressionOnSingleLineRefactoring.cs" />
    <Compile Include="Refactorings\AvoidSingleLineBlockRefactoring.cs" />
    <Compile Include="Refactorings\FormatConditionalExpressionRefactoring.cs" />
    <Compile Include="Refactorings\MakeMemberReadOnly\MakeMemberReadOnlyRefactoring.cs" />
    <Compile Include="Refactorings\MakeMemberReadOnly\MarkFieldAsReadOnlyRefactoring.cs" />
    <Compile Include="Refactorings\MakeMemberReadOnly\UseReadOnlyAutoPropertyRefactoring.cs" />
    <Compile Include="Refactorings\JoinStringExpressionsRefactoring.cs" />
    <Compile Include="Refactorings\OverridingMemberCannotChangeParamsModifierRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantAsyncAwaitRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantAsyncAwaitRefactoring.AwaitRemover.cs" />
    <Compile Include="Refactorings\RemoveRedundantAutoPropertyInitializationRefactoring.cs" />
    <Compile Include="Refactorings\ReorderNamedArgumentsRefactoring.cs" />
    <Compile Include="Refactorings\ReorderTypeParameterConstraintsRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceCommentWithDocumentationCommentRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantBaseInterfaceRefactoring.cs" />
    <Compile Include="Refactorings\UseMethodGroupInsteadOfAnonymousFunctionRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyBooleanExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyLazilyInitializedPropertyRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedConstructorParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedIndexerParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedLocalFunctionParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedLocalFunctionSyntaxRefactoring`3.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedLocalFunctionTypeParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedMethodParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedMethodSyntaxRefactoring`3.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedSyntaxHelper.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedSyntaxRefactoring`4.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedMethodTypeParameterRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\SyntaxInfo.cs" />
    <Compile Include="DiagnosticAnalyzers\SimplifyCoalesceExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantCastDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SortEnumMembersDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UnusedTypeParameterDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\EnumMemberShouldDeclareExplicitValueRefactoring.cs" />
    <Compile Include="Refactorings\AbstractTypeShouldNotHavePublicConstructorsRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\UseGenericEventHandlerDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\StaticMemberInGenericTypeShouldUseTypeParameterRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\UseStringLengthInsteadOfComparisonWithEmptyStringDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\CompositeEnumValueContainsUndefinedFlagRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\UseStringComparisonDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedParameterRefactoring.cs" />
    <Compile Include="Refactorings\ParameterNameDiffersFromBaseRefactoring.cs" />
    <Compile Include="Refactorings\CallDebugFailInsteadOfDebugAssertRefactoring.cs" />
    <Compile Include="Refactorings\AvoidNullReferenceExceptionRefactoring.cs" />
    <Compile Include="Refactorings\UseAttributeUsageAttributeRefactoring.cs" />
    <Compile Include="Refactorings\UseEventArgsEmptyRefactoring.cs" />
    <Compile Include="Refactorings\UseExclusiveOrOperatorRefactoring.cs" />
    <Compile Include="Refactorings\UseRegexInstanceInsteadOfStaticMethodRefactoring.cs" />
    <Compile Include="Refactorings\DeclareEnumValueAsCombinationOfNamesRefactoring.cs" />
    <Compile Include="Refactorings\UseRegularStringLiteralInsteadOfVerbatimStringLiteralRefactoring.cs" />
    <Compile Include="Refactorings\UseReturnInsteadOfAssignmentRefactoring.cs" />
    <Compile Include="Refactorings\UseIsOperatorInsteadOfAsOperatorRefactoring.cs" />
    <Compile Include="Refactorings\ValueTypeObjectIsNeverEqualToNullRefactoring.cs" />
    <Compile Include="Refactorings\OverrideInfo.cs" />
    <Compile Include="Refactorings\UnconstrainedTypeParameterCheckedForNullRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyCoalesceExpressionRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\CallStringConcatInsteadOfStringJoinDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseConditionalAccessDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantAsOperatorDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\Documentation\AddParameterToDocumentationCommentRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\MergeSwitchSectionsDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DeclareEnumMemberWithZeroValueDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantDisposeOrCloseCallDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantOverridingMemberDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\AddParenthesesAccordingToOperatorPrecedenceRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\DeclarationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InlineLocalVariableDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\MergeLocalDeclarationWithAssignmentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantFieldInitializationDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\RemoveRedundantAsOperatorRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantCastRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantDisposeOrCloseCallRefactoring.cs" />
    <Compile Include="Refactorings\MergeSwitchSectionsRefactoring.cs" />
    <Compile Include="Refactorings\DeclareEnumMemberWithZeroValueRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantStatementRefactoring.cs" />
    <Compile Include="Refactorings\AddSummaryToDocumentationCommentRefactoring.cs" />
    <Compile Include="Refactorings\Documentation\AddTypeParameterToDocumentationCommentRefactoring.cs" />
    <Compile Include="Refactorings\Documentation\DocumentationCommentRefactoring`1.cs" />
    <Compile Include="Refactorings\Documentation\DocumentationCommentRefactoring.cs" />
    <Compile Include="Refactorings\Documentation\ElementInfo.cs" />
    <Compile Include="Refactorings\Documentation\NewLinePosition.cs" />
    <Compile Include="Refactorings\Documentation\ParamElementInfo.cs" />
    <Compile Include="Refactorings\Documentation\TypeParamElementInfo.cs" />
    <Compile Include="Refactorings\RemoveRedundantFieldInitializationRefactoring.cs" />
    <Compile Include="Refactorings\MergeLocalDeclarationWithAssignmentRefactoring.cs" />
    <Compile Include="Refactorings\InlineLocalVariableRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\ThrowExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\RemoveRedundantOverridingMemberRefactoring.cs" />
    <Compile Include="Refactorings\SortEnumMembersRefactoring.cs" />
    <Compile Include="Refactorings\UnusedSyntax\UnusedTypeParameterRefactoring.cs" />
    <Compile Include="Refactorings\UseConditionalAccessRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\UseCoalesceExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\AddConstructorArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\AddDefaultAccessModifierRefactoring.cs" />
    <Compile Include="Refactorings\AddEmptyLineAfterEmbeddedStatementRefactoring.cs" />
    <Compile Include="Refactorings\AddEmptyLineAfterLastStatementInDoStatementRefactoring.cs" />
    <Compile Include="Refactorings\AddEmptyLineBetweenDeclarationsRefactoring.cs" />
    <Compile Include="Refactorings\AddStaticModifierToAllPartialClassDeclarationsRefactoring.cs" />
    <Compile Include="Refactorings\AsynchronousMethodNameShouldEndWithAsyncRefactoring.cs" />
    <Compile Include="Refactorings\AvoidEmptyCatchClauseThatCatchesSystemExceptionRefactoring.cs" />
    <Compile Include="Refactorings\AvoidImplicitlyTypedArrayRefactoring.cs" />
    <Compile Include="Refactorings\AvoidLockingOnPubliclyAccessibleInstanceRefactoring.cs" />
    <Compile Include="Refactorings\AvoidNullLiteralExpressionOnLeftSideOfBinaryExpressionRefactoring.cs" />
    <Compile Include="Refactorings\AvoidSemicolonAtEndOfDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\AvoidUsageOfForStatementToCreateInfiniteLoopRefactoring.cs" />
    <Compile Include="Refactorings\UseGenericEventHandlerRefactoring.cs" />
    <Compile Include="Refactorings\UseSpacesInsteadOfTabRefactoring.cs" />
    <Compile Include="Refactorings\AvoidUsageOfUsingAliasDirectiveRefactoring.cs" />
    <Compile Include="Refactorings\AvoidUsageOfWhileStatementToCreateInfiniteLoopRefactoring.cs" />
    <Compile Include="Refactorings\DeclareEachAttributeSeparatelyRefactoring.cs" />
    <Compile Include="Refactorings\DeclareEachTypeInSeparateFileRefactoring.cs" />
    <Compile Include="Refactorings\DeclareTypeInsideNamespaceRefactoring.cs" />
    <Compile Include="Refactorings\DeclareUsingDirectiveOnTopLevelRefactoring.cs" />
    <Compile Include="Refactorings\DefaultLabelShouldBeLastLabelInSwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\FormatAccessorListRefactoring.cs" />
    <Compile Include="Refactorings\FormatBinaryOperatorOnNextLineRefactoring.cs" />
    <Compile Include="Refactorings\FormatDeclarationBracesRefactoring.cs" />
    <Compile Include="Refactorings\FormatEachEnumMemberOnSeparateLineRefactoring.cs" />
    <Compile Include="Refactorings\FormatEmbeddedStatementOnSeparateLineRefactoring.cs" />
    <Compile Include="Refactorings\FormatEmptyBlockRefactoring.cs" />
    <Compile Include="Refactorings\FormatSwitchSectionStatementOnSeparateLineRefactoring.cs" />
    <Compile Include="Refactorings\MergeElseClauseWithNestedIfStatementRefactoring.cs" />
    <Compile Include="Refactorings\MergeIfStatementWithNestedIfStatementRefactoring.cs" />
    <Compile Include="Refactorings\FormatEachStatementOnSeparateLineRefactoring.cs" />
    <Compile Include="CodeFixProviders\DestructorDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\DeclareTypeInsideNamespaceCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantBooleanLiteralCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\BitwiseOperatorDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LocalDeclarationStatementDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\DocumentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ClassDeclarationCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\DestructorDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\CombineEnumerableWhereMethodChainRefactoring.cs" />
    <Compile Include="Refactorings\MarkLocalVariableAsConstRefactoring.cs" />
    <Compile Include="Refactorings\NonAsynchronousMethodNameShouldNotEndWithAsyncRefactoring.cs" />
    <Compile Include="Refactorings\RemoveBracesRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyAttributeArgumentListRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyDestructorRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyElseClauseRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyFinallyClauseRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyInitializerRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyNamespaceDeclarationRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyRegionRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEmptyStatementRefactoring.cs" />
    <Compile Include="Refactorings\RemoveEnumDefaultUnderlyingTypeRefactoring.cs" />
    <Compile Include="Refactorings\RemoveOriginalExceptionFromThrowStatementRefactoring.cs" />
    <Compile Include="Refactorings\RemovePartialModifierFromTypeWithSinglePartRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantBaseConstructorCallRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantCallRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantCommaInInitializerRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantConstructorRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantDefaultSwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantDelegateCreationRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantEmptyLineRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantParenthesesRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantSealedModifierRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantStringToCharArrayCallRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantToStringCallRefactoring.cs" />
    <Compile Include="CodeFixProviders\InterpolationCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\InterpolationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FormatSummaryOnMultipleLinesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FormatSummaryOnSingleLineDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\FormatSummary\FormatSummaryOnMultipleLinesRefactoring.cs" />
    <Compile Include="Refactorings\FormatSummary\FormatSummaryOnSingleLineRefactoring.cs" />
    <Compile Include="CodeFixProviders\SingleLineDocumentationCommentTriviaCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\StatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RegionDirectiveTriviaCodeFixProvider.cs" />
    <Compile Include="Refactorings\RemoveUnnecessaryCaseLabelRefactoring.cs" />
    <Compile Include="Refactorings\RenamePrivateFieldAccordingToCamelCaseWithUnderscoreRefactoring.cs" />
    <Compile Include="Refactorings\ReorderModifiersRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyNullCheckRefactoring.cs" />
    <Compile Include="Refactorings\UseInsteadOfCountMethod\ReplaceCountMethodRefactoring.cs" />
    <Compile Include="Refactorings\UseAutoPropertyRefactoring.cs" />
    <Compile Include="Refactorings\CallCastInsteadOfSelectRefactoring.cs" />
    <Compile Include="Refactorings\CallOfTypeInsteadOfWhereAndCastRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyLambdaExpressionParameterListRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyLogicalNotExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyNestedUsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyNullableOfTRefactoring.cs" />
    <Compile Include="Refactorings\ThrowingOfNewNotImplementedExceptionRefactoring.cs" />
    <Compile Include="Refactorings\UseCarriageReturnAndLinefeedAsNewLineRefactoring.cs" />
    <Compile Include="Refactorings\CallFindInsteadOfFirstOrDefaultRefactoring.cs" />
    <Compile Include="Refactorings\UseCoalesceExpressionRefactoring.cs" />
    <Compile Include="Refactorings\UseLinefeedAsNewLineRefactoring.cs" />
    <Compile Include="Refactorings\UseNameOfOperatorRefactoring.cs" />
    <Compile Include="Refactorings\UsePredefinedTypeRefactoring.cs" />
    <Compile Include="Refactorings\CallStringConcatInsteadOfStringJoinRefactoring.cs" />
    <Compile Include="Refactorings\UseStringComparisonRefactoring.cs" />
    <Compile Include="Refactorings\UseStringIsNullOrEmptyMethodRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceIfStatementWithAssignmentRefactoring.cs" />
    <Compile Include="Refactorings\SimplifyConditionalExpressionRefactoring.cs" />
    <Compile Include="Refactorings\SwapExpressionsInBinaryExpressionRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\RegionDirectiveTriviaDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\MakeClassStaticRefactoring.cs" />
    <Compile Include="Refactorings\UsePostfixUnaryOperatorInsteadOfAssignmentRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceIfStatementWithReturnStatementRefactoring.cs" />
    <Compile Include="CodeFixProviders\ArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddConstructorArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AddEmptyLineAfterEmbeddedStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AnonymousMethodCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ArrowExpressionClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AwaitExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BaseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\CaseSwitchLabelCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ExtractMemberToNewDocumentCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\NewLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceTabWithSpacesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UsingDirectiveCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\TabWhiteSpaceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AwaitExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AssignmentExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseCarriageReturnAndLinefeedAsNewLineDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseLinefeedAsNewLineDiagnosticAnalyzer.cs" />
    <Compile Include="Refactorings\SimplifyLinqMethodChainRefactoring.cs" />
    <Compile Include="Refactorings\UseCountOrLengthPropertyInsteadOfAnyMethodRefactoring.cs" />
    <Compile Include="Refactorings\UseInsteadOfCountMethod\UseAnyMethodInsteadOfCountMethodRefactoring.cs" />
    <Compile Include="Refactorings\UseInsteadOfCountMethod\UseCountOrLengthPropertyInsteadOfCountMethodRefactoring.cs" />
    <Compile Include="CodeFixProviders\ConstructorDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\DoStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\VariableDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FinallyClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ForStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InvocationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MemberDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\IfStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatCaseLabelStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InterpolatedStringCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\LockStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MethodDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\NamespaceDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\PropertyDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyNestedUsingStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\MemberAccessExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AssignmentExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ReplaceIfStatementWithReturnStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyLogicalNotExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseExplicitTypeInsteadOfVarCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveOriginalExceptionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ConditionalExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveEnumDefaultBaseTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\InitializerCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ElseClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EmptyStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\EnumDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatAccessorListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEmptyBlockCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ImplicitArrayCreationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\ParenthesizedLambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveEmptyInitializerCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveRedundantParenthesesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemovePartialModifierFromTypeWithSinglePartCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveTriviaCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEachStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\FormatEmbeddedStatementOnSeparateLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SwitchSectionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseExpressionBodiedMemberCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseNameOfOperatorCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyNullableOfTCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UsePredefinedTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\SimplifyLambdaExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\WhileStatementCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\SimpleAssignmentExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\PropertyDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LambdaExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SplitVariableDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CompilationUnitDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ConstructorDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\DoStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FinallyClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\FormatDeclarationBracesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ForStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InterpolatedStringDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InvocationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LockStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\MethodDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\NamespaceDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidSemicolonAtEndOfDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RedundantEmptyLineDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\LogicalNotExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ThrowStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UsingDirectiveDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\WhileStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticDescriptorExtensions.cs" />
    <Compile Include="Refactorings\AddBracesRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceDoWithWhileRefactoring.cs" />
    <Compile Include="Refactorings\RemoveRedundantBooleanLiteralRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\AccessorListDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AnonymousMethodDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ArrowExpressionClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AvoidEmbeddedStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\CatchClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ConditionalExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ElseClauseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BaseDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\GenericNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\InitializerDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantSealedModifierDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EmptyStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EnumDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ImplicitArrayCreationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\NamedTypeDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\SwitchSectionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveRedundantParenthesesDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\QualifiedNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\IdentifierNameDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\IfStatementSyntaxDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BinaryExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ParenthesizedLambdaExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ObjectCreationExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ModifiersDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\BooleanLiteralDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\AttributeArgumentListDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\FormatBinaryOperatorOnNextLineCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\BinaryExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\AttributeArgumentListCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseExplicitTypeInsteadOfVarInForEachCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\UseVarInsteadOfExplicitTypeCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\SimpleMemberAccessExpressionDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\ArgumentDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UsingStatementDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\WhitespaceDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\UseExpressionBodiedMemberDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticCategories.cs" />
    <Compile Include="DiagnosticAnalyzers\AttributeListDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\DeclareEachAttributeSeparatelyCodeFixProvider.cs" />
    <Compile Include="Refactorings\SimplifyBooleanComparisonRefactoring.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Refactorings\ParenthesizeConditionInConditionalExpressionRefactoring.cs" />
    <Compile Include="DiagnosticAnalyzers\RemoveBracesDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\RemoveBracesCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\UseExplicitTypeInForEachDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\VariableDeclarationDiagnosticAnalyzer.cs" />
    <Compile Include="DiagnosticAnalyzers\EmbeddedStatementDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddBracesCodeFixProvider.cs" />
    <Compile Include="CodeFixProviders\RemoveBracesFromIfElseCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\FieldSymbolDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\RenameFieldAccordingToCamelCaseWithUnderscoreCodeFixProvider.cs" />
    <Compile Include="DiagnosticAnalyzers\BlockDiagnosticAnalyzer.cs" />
    <Compile Include="CodeFixProviders\AddBracesToIfElseCodeFixProvider.cs" />
    <Compile Include="Refactorings\UseStringLengthInsteadOfComparisonWithEmptyStringRefactoring.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="Roslynator.Analyzers.nuspec" />
    <None Include="project.json" />
    <None Include="Roslynator.CSharp.Analyzers.snk" />
    <None Include="tools\install.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="tools\uninstall.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Analyzers.xml" />
    <Content Include="LICENSE.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Common\Common.csproj">
      <Project>{814c7bd5-f7fa-441d-897f-f7876b038b30}</Project>
      <Name>Common</Name>
    </ProjectReference>
    <ProjectReference Include="..\Core\Core.csproj">
      <Project>{34a3e42e-2254-4ee7-a152-eedb18e3d7e3}</Project>
      <Name>Core</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild" Condition=" '$(Configuration)' == 'Release'">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
    <Exec Command="&quot;$(SolutionDir)..\tools\NuGet.exe&quot; pack &quot;$(ProjectDir)\Roslynator.Analyzers.nuspec&quot; -OutputDirectory &quot;$(ProjectDir)NuGetOutputDirectory&quot; -BasePath &quot;$(ProjectDir)$(OutDir).&quot; -Prop Configuration=Release -NoPackageAnalysis" LogStandardErrorAsError="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{9C9EF15B-2CB0-485E-BB48-90F670F6A3D8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Roslynator.CSharp.CodeFixes</RootNamespace>
    <AssemblyName>Roslynator.CSharp.CodeFixes</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\global.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>..\global.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Roslynator.CSharp.CodeFixes.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup>
    <DelaySign>false</DelaySign>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="CodeFixes\AddBodyCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AddBracesToDeclarationOrLabeledStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AddBreakStatementToSwitchSectionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AssignDefaultValueToOutParameterCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AttributeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\BaseCodeFixProvider.cs" />
    <Compile Include="CodeFixes\BinaryExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ChangeOverridingMemberAccessibilityCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ConditionalExpressionClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ElementAccessCodeFixProvider.cs" />
    <Compile Include="CodeFixes\MemberHidesInheritedMemberCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AddReturnStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\BaseTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\AssignmentExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\BaseListCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ModifiersCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TypeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TypeDoesNotContainDefinitionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TypeParameterCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TypeParameterConstraintClauseCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ExtractDeclarationFromUsingStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\IdentifierNameCodeFixProvider.cs" />
    <Compile Include="CodeFixes\InvocationExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\LabeledStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\CannotImplicitlyConvertTypeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\MarkOperatorAsPublicAndStaticCodeFixProvider.cs" />
    <Compile Include="CodeFixes\MemberDeclarationCodeFixProvider.cs" />
    <Compile Include="CodeFixes\OperatorCannotBeAppliedToOperandsCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ParameterCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemoveDuplicateAttributeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemoveDuplicateModifierCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemoveImplementationFromAbstractMemberCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemoveNewModifierCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ArgumentCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ExpressionCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemovePropertyOrFieldInitializerCodeFixProvider.cs" />
    <Compile Include="CodeFixes\RemoveUnusedVariableCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ReturnStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\SimpleNameCodeFixProvider.cs" />
    <Compile Include="CodeFixes\StatementCodeFixProvider.cs" />
    <Compile Include="CodeFixes\SynchronizeAccessibilityCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TokenCodeFixProvider.cs" />
    <Compile Include="CodeFixes\ChangeTypeOfLocalVariableCodeFixProvider.cs" />
    <Compile Include="CodeFixes\TypeParameterConstraintCodeFixProvider.cs" />
    <Compile Include="CodeFixes\UnreachableCodeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\UnsafeCodeFixProvider.cs" />
    <Compile Include="CodeFixes\YieldStatementCodeFixProvider.cs" />
    <Compile Include="CodeFixIdentifiers.cs" />
    <Compile Include="CodeFixIdentifiers.Generated.cs" />
    <Compile Include="CodeFixIdentifierSet.cs" />
    <Compile Include="CodeFixSettings.cs" />
    <Compile Include="Refactorings\AddBreakStatementToSwitchSectionRefactoring.cs" />
    <Compile Include="Refactorings\AddComparisonWithBooleanLiteralRefactoring.cs" />
    <Compile Include="Refactorings\AddDocumentationCommentRefactoring.cs" />
    <Compile Include="Refactorings\CreateSingletonArrayRefactoring.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Refactorings\ExtractDeclarationFromUsingStatementRefactoring.cs" />
    <Compile Include="Refactorings\MemberTypeMustMatchOverriddenMemberTypeRefactoring.cs" />
    <Compile Include="Refactorings\ModifiersRefactoring.cs" />
    <Compile Include="Refactorings\ReplaceStringLiteralWithCharacterLiteralRefactoring.cs" />
    <Compile Include="Refactorings\UseYieldReturnInsteadOfReturnRefactoring.cs" />
    <Compile Include="CodeFixes\VariableDeclarationCodeFixProvider.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="CodeFixesByDiagnosticId.md" />
    <None Include="project.json" />
    <None Include="README.md" />
    <None Include="Roslynator.CodeFixes.nuspec" />
    <None Include="Roslynator.CSharp.CodeFixes.snk" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Common\Common.csproj">
      <Project>{814C7BD5-F7FA-441D-897F-F7876B038B30}</Project>
      <Name>Common</Name>
    </ProjectReference>
    <ProjectReference Include="..\Core\Core.csproj">
      <Project>{34a3e42e-2254-4ee7-a152-eedb18e3d7e3}</Project>
      <Name>Core</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="CodeFixes.xml">
      <SubType>Designer</SubType>
    </Content>
    <Content Include="Diagnostics.xml" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Target Name="AfterBuild">
    <GetAssemblyIdentity AssemblyFiles="$(OutDir)\$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="AnalyzerAssemblyInfo" />
    </GetAssemblyIdentity>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>